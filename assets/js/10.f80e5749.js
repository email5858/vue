(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{573:function(t,a,s){t.exports=s.p+"assets/img/20201118234432335.b93d3e7d.png"},574:function(t,a,s){t.exports=s.p+"assets/img/20201118235743683.1074a7db.png"},608:function(t,a,s){"use strict";s.r(a);var e=s(11),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"画布canvas-介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#画布canvas-介绍"}},[t._v("#")]),t._v(" 画布Canvas 介绍")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"title"}),e("p",[t._v("canvas 可理解为一块矩形画布区域. 通过绘制路径能实现 点 线 圆形 矩形等千变万化的画面,这些画面通过画笔Paint绘制.")])]),e("h2",{attrs:{id:"canvas-官方库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#canvas-官方库"}},[t._v("#")]),t._v(" Canvas 官方库")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://api.flutter.dev/flutter/painting/painting-library.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Painting官方详细文档"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://api.flutter.dev/flutter/dart-ui/Canvas-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Canvas官方详细文档"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://api.flutter.dev/flutter/dart-ui/Path-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Path官方详细文档"),e("OutboundLink")],1)])])]),t._v(" "),e("h2",{attrs:{id:"使用canvas"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用canvas"}},[t._v("#")]),t._v(" 使用Canvas")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("假设新建类A 然后去继承可实现绘制需求的类 "),e("code",[t._v("CustomClipper<T>")]),t._v(" "),e("code",[t._v("CustomPainter")])])]),t._v(" "),e("li",[e("p",[t._v("实现后使用新建类A")])])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("CustomClipper<T>")]),t._v(" 抽象类并且继承 Listenable 类")])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"title"}),e("ul",[e("li",[t._v("T 所指类型")])]),t._v(" "),e("ol",[e("li",[e("code",[t._v("ClipRect")]),t._v(", which can be customized with a "),e("code",[t._v("CustomClipper<Rect>")]),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("ClipRRect")]),t._v(", which can be customized with a "),e("code",[t._v("CustomClipper<RRect>")]),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("ClipOval")]),t._v(", which can be customized with a "),e("code",[t._v("CustomClipper<Rect>")]),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("ClipPath")]),t._v(", which can be customized with a "),e("code",[t._v("CustomClipper<Path>")]),t._v(".")])])]),e("div",{staticClass:"language-dart line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-dart"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///假设继承CustomClipper<Path> 那么Widget使用举例如下 ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClipPath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Key")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clipper"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clipBehavior "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Clip")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("antiAlias"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Widget")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" child"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clipBehavior "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" child"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" child"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("ul",[e("li",[e("code",[t._v("CustomPainter")]),t._v(" 抽象类并且继承 Listenable 类")])]),t._v(" "),e("div",{staticClass:"language-dart line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-dart"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///假设继承CustomPaint 那么Widget使用举例如下 ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomPaint")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Key")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("painter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foregroundPainter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("size "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Size")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("zero"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isComplex "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("willChange "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Widget")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" child"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isComplex "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("willChange "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("painter "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" foregroundPainter "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("isComplex "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("willChange"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" child"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" child"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("h2",{attrs:{id:"画笔panit-方法属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#画笔panit-方法属性"}},[t._v("#")]),t._v(" 画笔Panit 方法属性")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("属性/方法")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("值类型")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("color")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Color")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("\b画笔颜色,可重复设置使用,生效权重 "),e("code",[t._v("后使用 > 前使用")])])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("strokeCap")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("StrokeCap")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("画笔笔触类型 举例:"),e("code",[t._v("StrokeCap.round")]),t._v(",具体理解,如 "),e("code",[t._v("点,在使用后由矩形点变成圆点")])])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("strokeJoin")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("StrokeJoin")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("拐角类型")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("isAntiAlias")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("bool")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("是否启动抗锯齿")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("blendMode")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("BlendMode")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("颜色混合模式")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("style")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("PaintingStyle")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("绘画风格，默认为填充")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("colorFilter")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("ColorFilter")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("颜色渲染模式，一般是矩阵效果来改变的,但是flutter中只能使用颜色混合模式")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("maskFilter")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("MaskFilter")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("颜色渲染模式，一般是矩阵效果来改变的,但是flutter中只能使用颜色混合模式")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("filterQuality")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("FilterQuality")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("模糊遮罩效果，flutter中只有这个")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("strokeWidth")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("画笔的宽度")])])])]),t._v(" "),e("ul",[e("li",[t._v("strokeCap")])]),t._v(" "),e("p",[e("img",{attrs:{src:s(573),alt:"strokeCap"}})]),t._v(" "),e("ul",[e("li",[t._v("strokeJoin")])]),t._v(" "),e("p",[e("img",{attrs:{src:s(574),alt:"strokeCap"}})]),t._v(" "),e("ul",[e("li",[t._v("示例代码")])]),t._v(" "),e("div",{staticClass:"language-dart line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-dart"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[定义画笔]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Paint")]),t._v(" _paint "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Paint")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//画笔颜色")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Colors")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("blue\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//画笔笔触类型")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strokeCap "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StrokeCap")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("round\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//拐角类型")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strokeJoin"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StrokeJoin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("round\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//是否启动抗锯齿")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isAntiAlias "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//颜色混合模式")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("blendMode "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BlendMode")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exclusion\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//绘画风格，默认为填充")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PaintingStyle")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fill\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//颜色渲染模式，一般是矩阵效果来改变的,但是flutter中只能使用颜色混合模式")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("colorFilter "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ColorFilter")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mode")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Colors")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("blueAccent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BlendMode")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exclusion"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//模糊遮罩效果，flutter中只有这个")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("maskFilter "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MaskFilter")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("blur")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BlurStyle")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("inner"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//颜色渲染模式的质量")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("filterQuality "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FilterQuality")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("high\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//画笔的宽度")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strokeWidth "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("15.0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br")])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"title"}),e("p",[t._v("最终绘制覆写在paint方法.调用方法返回的 Canvas 类,调用其中要使用的方法绘制图形.")])]),e("div",{staticClass:"language-dart line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-dart"}},[e("code",[e("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@override")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("paint")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Canvas")]),t._v(" canvas"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Size")]),t._v(" size"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("int i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" offsetList"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("offsetList"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offset "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" offsetList"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offset "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// canvas.restore();")]),t._v("\n      _paint\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" offsetList"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strokeWidth "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" offsetList"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strokeWidth"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// 最终绘制")]),t._v("\n      canvas"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("drawLine")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n          offsetList"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offset"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" offsetList"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offset"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _paint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// canvas.save();")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br")])]),e("ul",[e("li",[t._v("Canvas 方法属性")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("属性/方法")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("clipPath(Path path, {bool doAntiAlias = true}) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("将剪辑区域缩小到当前剪辑和给定Path的交点")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("clipRect(Rect rect, { ClipOp clipOp = ClipOp.intersect, bool doAntiAlias = true }) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("将剪辑区域缩小到当前剪辑和给定矩形的交点")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("clipRRect(RRect rrect, {bool doAntiAlias = true}) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("将剪辑区域缩小到当前剪辑和给定圆角矩形的交点")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("drawArc(Rect rect, double startAngle, double sweepAngle, bool useCenter, Paint paint) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("绘制一个按比例缩放以适合给定矩形的圆弧")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("drawAtlas(Image atlas, "),e("code",[t._v("List<RSTransform>")]),t._v(" transforms, "),e("code",[t._v("List<Rect>")]),t._v(" rects, "),e("code",[t._v("List<Color>")]),t._v("? colors, BlendMode? blendMode, Rect? cullRect, Paint paint) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Draws many parts of an image - the atlas - onto the canvas")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("drawCircle(Offset c, double radius, Paint paint) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("以第一个参数给出的点为中心绘制一个圆，其半径由第二个参数给出，Paint在第三个参数中给出。圆圈是填充还是描边（或两者）由Paint.style控制")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("drawColor(Color color, BlendMode blendMode) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("将给定的Color绘制到画布上，应用给定的 BlendMode，给定的颜色是源，背景是目标")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("drawDRRect(RRect outer, RRect inner, Paint paint) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("使用给定的Paint绘制一个由两个圆角矩形之间的差异组成的形状。这个形状是填充还是描边（或两者）由Paint.style控制")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("drawImage(Image image, Offset offset, Paint paint) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("将给定的Image绘制到画布中，其左上角位于给定的Offset。使用给定的Paint将图像合成到画布中")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("drawImageNine(Image image, Rect center, Rect dst, Paint paint) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("使用给定的Paint 将给定的Image绘制到画布中")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("drawImageRect(Image image, Rect src, Rect dst, Paint paint) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("将src参数描述的给定图像的子集绘制到参数给出的轴对齐矩形中的画布中dst")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("drawLine(Offset p1, Offset p2, Paint paint) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("使用给定的颜料在给定的点之间画一条线。线条被描边，此调用将忽略Paint.style的值")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("drawOval(Rect rect, Paint paint) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("绘制一个轴对齐的椭圆，用给定的Paint填充给定的轴对齐矩形。椭圆是填充还是描边（或两者）由Paint.style控制")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("drawPaint(Paint paint) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("用给定的Paint填充画布")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("drawParagraph(Paragraph paragraph, Offset offset) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("在给定的Offset处将给定Paragraph 中的文本绘制到此画布中")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("drawPath(Path path, Paint paint) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("使用给定的Paint绘制给定的Path")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("drawPicture(Picture picture) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("将给定的图片绘制到画布上。要创建图片，请参阅 PictureRecorder")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("drawPoints(PointMode pointMode, "),e("code",[t._v("List<Offset>")]),t._v(" points, Paint paint) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("根据给定的PointMode绘制一系列点")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("drawRawAtlas(Image atlas, Float32List rstTransforms, Float32List rects, Int32List? colors, BlendMode? blendMode, Rect? cullRect, Paint paint) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Draws many parts of an image - the atlas - onto the canvas.")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("drawRawPoints(PointMode pointMode, Float32List points, Paint paint) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("根据给定的PointMode绘制一系列点")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("drawRect(Rect rect, Paint paint) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("使用给定的Paint绘制一个矩形。矩形是填充还是描边（或两者）由Paint.style控制")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("drawRRect(RRect rrect, Paint paint) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("使用给定的Paint绘制一个圆角矩形。矩形是填充还是描边（或两者）由Paint.style控制")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("drawShadow(Path path, Color color, double elevation, bool transparentOccluder) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("为表示给定材质标高的Path绘制阴影")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("drawVertices(Vertices vertices, BlendMode blendMode, Paint paint) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("在画布上 绘制一组顶点")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("getSaveCount() → int")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("返回保存堆栈上的项目数，包括初始状态。这意味着它为干净的画布返回 1，并且每次调用save和saveLayer都会增加它，并且每次匹配的恢复调用都会减少它")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("noSuchMethod(Invocation invocation) → dynamic")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("在访问不存在的方法或属性时调用")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("restore() → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("如果有任何东西要弹出，则弹出当前保存堆栈。否则，什么都不做")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("rotate(double radians) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("向当前变换添加旋转。参数是顺时针弧度")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("save() → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("在保存堆栈中保存当前变换和剪辑的副本")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("saveLayer(Rect? bounds, Paint paint) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("在保存堆栈上保存当前变换和剪辑的副本，然后创建一个新组，后续调用将成为其中的一部分。当稍后弹出保存堆栈时，该组将被展平为一个图层并 应用给定paint的Paint.colorFilter和Paint.blendMode")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("scale(double sx, [double? sy]) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("向当前变换添加轴对齐比例，按水平方向的第一个参数和垂直方向的第二个参数进行缩放")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("skew(double sx, double sy) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("向当前变换添加一个轴对齐的倾斜，第一个参数是围绕原点顺时针旋转的水平倾斜，第二个参数是围绕原点顺时针旋转的垂直倾斜")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("toString() → String")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("此对象的字符串表示形式")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("transform(Float64List matrix4) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("将当前变换乘以指定为列优先顺序的值列表的指定 4⨉4 变换矩阵")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("translate(double dx, double dy) → void")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("向当前变换添加平移，通过第一个参数水平移动坐标空间，通过第二个参数垂直移动坐标空间")])])])]),t._v(" "),e("h2",{attrs:{id:"路径path-方法属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#路径path-方法属性"}},[t._v("#")]),t._v(" 路径Path 方法属性")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://api.flutter.dev/flutter/dart-ui/Path-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Path官方详细文档"),e("OutboundLink")],1)])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("属性/方法")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("值类型")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("\b")])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);